 МИНИСТЕРСТВО ОБРАЗОВАНИЯ И НАУКИ РФ
Федеральное государственное автономное образовательное учреждение высшего образования
«ТЮМЕНСКИЙ ГОСУДАРСТВЕННЫЙ УНИВЕРСИТЕТ»
ИНСТИТУТ МАТЕМАТИКИ И КОМПЬЮТЕРНЫХ НАУК
КАФЕДРА ИНФОРМАЦИОННЫХ СИСТЕМ



ОТЧЕТ ОБ ИНДИВИДУАЛЬНОЙ РАБОТЕ
ДИСЦИПЛИНЕ «БАЗЫ ДАННЫХ»
Тема
«Автоматизация учета документооборота и исполнения поручений»


Выполнил:
студент группы ИСиТ-189-1. 
Бугаков Д.Ю.
Руководитель:
канд. физ.-мат. наук,
доцент Моор П. К.








Тюмень – 2019
ОГЛАВЛЕНИЕ
1.	ОПИСАНИЕ ПРЕДМЕТНОЙ ОБЛАСТИ	3
1.1.	ФУНКЦИИ ПРИЛОЖЕНИЯ	4
2.	МОДЕЛИРОВАНИЕ ДАННЫХ	4
2.1.	ПРИВЕДЕНИЕ К НОРМАЛЬНЫМ ФОРМАМ	4
2.1.1.	ПЛОСКАЯ ТАБЛИЦА	5
2.1.2.	ПЕРВАЯ НОРМАЛЬНАЯ ФОРМА	5
2.1.3.	ВТОРАЯ НОРМАЛЬНАЯ ФОРМА	7
2.1.4.	ТРЕТЬЯ НОРМАЛЬНАЯ ФОРМА	7
2.2.	ER-МОДЕЛИРОВАНИЕ	10
3.	ОПИСАНИЕ ПРИЛОЖЕНИЯ	13
3.1.	ФОРМА С ПОДЧИНЕННЫМИ ТАБЛИЦАМИ	16
3.2.	ФОРМА С ИТОГАМИ	18
3.3.	ФОРМА С ПРОЦЕДУРАМИ	19
ЗАКЛЮЧЕНИЕ	20
СПИСОК ЛИТЕРАТУРЫ	20

 
1.	ОПИСАНИЕ ПРЕДМЕТНОЙ ОБЛАСТИ
Программа “Учета документооборота и исполнения поручений” предназначена для учета документов. Для организации учета документов и поручений на каждый документ заводится карточка.

Код документа	Назва ние документа	Код автора документа	Автор документа	Код типа	Тип документа	Дата документа
1	Согласие на обработку персональных данных 	1	Иванов	2	Приказ	21.09.2019

№	Поручение	Код исполнителя	Исполнитель	Код подразделения.	Название подр.	Срок исполнения
план	Дата исполнения
1	Подготовить
Данные	2	Сидоров	2	Отдел управления	22.09.2019	23.09.2019

2	Собрать подписи	3	Петров	2	Отдел управления	25.09.2019
	25.09.2019


Документ, к которому прилагаются поручения содержит в себе: код документа, название, код автора, ФИО автора документа, код типа документа, тип документа и дату документа. 
Автор документа может быть, как автором, так и исполнителем поручений. Автор документа может быть автором нескольких документов. У документа может быть только один автор.
Тип документа определяется кодом. Документ может иметь лишь один тип, но один и тот же тип может быть у нескольких документов.
В карточку учета заносятся строки поручений по этому документу.
На один документ может быть выдано несколько поручений. Строка поручений относится только к одному документу
Каждое поручение содержит в себе: последовательный номер поручения, описание поручения, код исполнителя, ФИО исполнителя, код подразделения и его название, срок исполнения, фактическую дату исполнения. 
Поручение отдается одному исполнителю. На одного исполнителя может быть отдано несколько поручений в одном или в других документах. Исполнитель может являться исполнителем и в других документах и исполнениях.
В строке может быть указано одно поручение
Номер поручения в документе всегда уникален. 

1.1.	ФУНКЦИИ ПРИЛОЖЕНИЯ
Программа “Учет документооборота и исполнения поручений” выполняет следующие функции:
1.	предоставляет возможность хранить реальный документ в базе данных;
2.	предоставляет возможность вводить, изменять и удалять поручения для документов;
3.	делает выводы исходя из некоторой результирующей информации о документах;
4.	классифицирует документы.
2.	МОДЕЛИРОВАНИЕ ДАННЫХ
2.1.	ПРИВЕДЕНИЕ К НОРМАЛЬНЫМ ФОРМАМ
 
2.1.1.	ПЛОСКАЯ ТАБЛИЦА
К_док	Назв_Д	К_авт	авт	К_тип	тип	Д	№	Поруч	К_исп	исп	К_под	под	ДП	ДИ
1	Согласие на обработку персональных данных	1	Иванов	2	Уведомление	21.09.2019	1	Подготовить
Данные	2	Сидоров	2	Отдел управления	22.09.2019	23.09.2019

							2	Собрать подписи	3	Петров	2	Отдел управления	25.09.2019	25.09.2019

Каждая повторяющаяся группа образует новую группу выделяется кортеж 
2.1.2.	ПЕРВАЯ НОРМАЛЬНАЯ ФОРМА
Отношение находится в 1НФ, если все его атрибуты являются простыми. Не должно быть повторений строк в таблице.
К_док
KD	Назв_Д
ND	К_авт
KA	Авт
A	К_тип
KT	Тип
T	Д
D	№
N	Поруч
PO	К_исп
KI	Исп
I	К_под
KP	Под
P	ДП
DP	ДИ
DI
1	Согласие на обработку персональных данных	1	Иванов	2	Уведомление	21.09.2019	1	Подготовить
Данные	2	Сидоров	2	Отдел управления	22.09.2019	23.09.2019

1	Согласие на обработку персональных данных	1	Иванов	2	Уведомление	21.09.2019	2	Собрать подписи	3	Петров	2	Отдел управления	22.09.2019	25.09.2019
2	Приказ об утверждении структуры IT-отдела	2	Петров	2	Приказ	28.09.2019	1	Разработать схему отдела	4	Алексеев	3	Отдел разработки	5.10.2019	7.10.2019
2	Приказ об утверждении структуры IT-отдела	2	Петров	2	Приказ	28.09.2019	2	Установить иерархию 	5	Павлов	3	Отдел разработки	5.10.2019	8.10.2019

Потенциальные ключи: (KD, N);
Первичный ключ: KD, N
 
2.1.3.	ВТОРАЯ НОРМАЛЬНАЯ ФОРМА
Для начала необходимо выписать общее отношение, из которого будет в дальнейшем выявляться зависимости:
All (KD, ND, KA, A, KT, T, D, N, PO, KI, I, KP, P, DP, DI)
Затем для нахождения второй нормальной формы мы должны выявить частичные зависимости:
KD->ND, KA, A, KT, T, D
В данном случае получается частичная зависимость названия документа, кода автора, автора, кода типа, типа и даты от кода документа.
Выписываем отношение после выявления зависимости, в котором первичным ключом будет являться код документа.
Dock (KD, ND, KA, A, KT, T, D)
К_док
KD	Назв_д
ND	К_авт
KA	Авт
A	К_тип
KT	Тип
T	Дата
D
1	Согласие на обработку персональных данных	1	Иванов	2 	Уведомление	21.09.2019

Выписываем изначальное отношение убрав из него зависимые атрибуты.
O (KD, N, PO, KI, I, KP, P, DP, DI)
В итоге получим:
К_док
KD	№
N	Поруч
PO	К_исп
KI	Исп
I	К_под
KP	Под
P	ДП
DP	ДИ
DI
1	1	Подготовить
Данные	2	Сидоров	2	Отдел управления	22.09.2019	23.09.2019

1	2	Собрать подписи	3	Петров	2	Отдел управления	22.09.2019	25.09.2019

2.1.4.	ТРЕТЬЯ НОРМАЛЬНАЯ ФОРМА
Для нахождения третьей нормальной формы мы должны выявить транзитивные зависимости.
 
Выявление транзитивных зависимостей в отношении Dock:
Dock (KD, ND, KA, A, KT, T, D)
В данном отношении будет транзитивная зависимость, а именно код автора будет зависим от кода документа, а в свою очередь автор зависит от кода автора:
KD->KA 		KA->A
Запишем в отдельное отношение:
O2(KA, A)						* Автор 
К_авт
KA	Авт
A
1	Иванов
Следующей транзитивной зависимостью будет являться зависимость кода типа документа от кода документа, где от кода типа документа зависит тип документа.
KD->KT		KT->T			
Выпишем в отдельное отношение:
O3(KT, T)						* Тип документа
К_тип
KT	Тип
T
2	Уведомление
Таким образом после выявления всех транзитивных зависимостей и их исключения получится следующее отношение:
Dock (KD, ND, KA, KT, D)			* Документ
К_док
KD	Назв_Д
ND	К_авт
KA	К_тип
KT	Д
D
1	Согласие на обработку персональных данных	1
	2	21.09.2019

 
Затем необходимо выделить транзитивные зависимости в общем отношении:
O (KD, N, PO, KI, I, KP, P, DP, DI)
В данном случае транзитивной зависимостью будет являться зависимость кода исполнителя от кода документа и номера документа, а свою очередь зависимость фамилии исполнителя, кода подразделения в котором он работает и название подразделения от кода исполнителя.
KD, N -> KI		KI->I, KP, P
Выписываем отношение:
I (KI, I, KP, P)
В получившемся отношении можно выявить еще одну транзитивную зависимость, а именно зависимость кода подразделения от кода исполнителя, где от кода подразделения зависит название подразделения:
KI->KP		KP->P
Выписываем в отдельное отношение:
O6(KP, P)						* Подразделение
К_под
KP	Под
P
2	Отдел управления
Далее выписываем итоговое отношение по исполнителям
I (KI, I, KP)						* Исполнитель
К_исп
KI	Исп
I	К_под
KP
2	Сидоров	2
3	Петров	2

Итоговым отношением является: 
Gen (KD, N, PO, KI, DP, DI)			* Поручение
К_док
KD	№
N	Поруч
PO	К_исп
KI	ДП
DP	ДИ
DI
1	1	Подготовить
Данные	2	22.09.2019	23.09.2019

2	1	Разработать схему отдела	4	5.10.2019	7.10.2019

2.2.	ER-МОДЕЛИРОВАНИЕ
Для построения ER- модели мы должны выделить все сущности и определить связь между ними. Первая сущность- документ. 
Документ содержит множество поручений, а следовательно, вторая сущность — это поручения. Также множество поручений может быть у одного документа. Документ и поручения имеют связь один ко многим (Один документ-много поручений).
 
 
Каждый документ имеет лишь одного автора, но один и тот же автор может быть автором многих документов (Один ко многим).
 
Поручение отдается лишь одному исполнителю. Исполнитель может иметь несколько поручений.
, 
Документ может иметь лишь один тип, но один и тот же тип документа может быть у многих документов.
 
Каждый исполнитель принадлежит к одному подразделению, но каждое подразделение может содержать множество исполнителей.
 
 
3.	ОПИСАНИЕ ПРИЛОЖЕНИЯ
Было разработано 4 формы для работы с таблицами базы данных “Учет документооборота”. Первые три формы “Авторы”, “Тип документа”, “Подразделения” (Рис.1,2,3) позволяют добавлять, изменять, удалять выбранные данные в таблицах из баз данных, с которыми они работают.
 
Рис.1
 
Рис.2
 
Рис.3
Форма “Исполнителей” позволяет формировать новые данные на основе данных, которые были внесены в предыдущие таблицы. Таким образом можно создать нового исполнителя и ,с помощью элемента ComboBox, назначить ему подразделение, данные о котором были внесены в предыдущую таблицу.
 
Рис.4
При нажатии на зеленый крестик (Рисунок 5) в bindingNavigator появляется возможность добавления новой записи в любую из таблиц. Отображается надпись (Рисунок 5), предупреждающая о том, что таблица готова к добавлению новой записи. Кнопка “Добавить” становится доступной. Пользователь заполняет значения формы и нажимает кнопку “Добавить”, после этого в базу данных добавляется новая запись. Если пользователь нажимает кнопку “Добавить”, не заполнив форму, появляется сообщение о том, что пользователь не заполнил необходимые поля и эти поля подсвечиваются (Рисунок 6).
 
Рис.5
 
Рис.6
 
Рис.7
После успешного добавления новой записи кнопка “Добавить” блокируется, пока не будет происходить новое добавление.
При нажатии на красный крестик в bindingNavigator (Рисунок 5) удаляется выбранная запись из БД. 
После всех изменений таблицы необходимо нажать кнопку сохранить, чтобы сохранить изменения.
3.1.	ФОРМА С ПОДЧИНЕННЫМИ ТАБЛИЦАМИ
Данное приложение содержит форму с подчиненными таблицами, где содержатся все авторы, их документы и поручения по этим документам. Всего на форме (Рисунок 8-9) расположено 3 таблицы и предусмотрена возможность редактирования, добавления и удаления поручений по выбранному документу с соответствующим автором.
 
Рис.8
 
Рис.9
3.2.	ФОРМА С ИТОГАМИ
В данной форме располагаются данные об исполнителях и кол-ве исполнений, которые они выполнили. Это реализовано черед представления в sql management studio. Так-же присутствует таблица с общими итогами.
 
Рис.10
 
3.3.	ФОРМА С ПРОЦЕДУРАМИ
	Данная форма использует процедуры для обработки данных в sql management. В данной форме содержится список с авторами и в datagrid выводится все информация по документам, которые они создали.
 
Рис.11
При наборе пользователем фамилии автора в combobox появляются фамилии, полученные по вводимым буквам для упрощения задачи.
 
Рис.12
ЗАКЛЮЧЕНИЕ
В ходе проделанной работы были выполнены следующие действия: первичный документ с был приведен к 3 нормальной форме с помощью процесса нормализации, в конечном итоге был получен определенный набор отношений; так-же были определены все сущности и связь между ними и впоследствии построена ER-модель базы данных; была построена база данных с помощью среды MS SQL Server Managment; разработано приложение на языке программирования c# с помощью среды разработки MS Visual Studio и компонента ADO.NET позволяющее взаимодействовать с базой данных и обеспечивающее учет поручений и документооборота.

СПИСОК ЛИТЕРАТУРЫ
1.	Евсеева О. Н., Шамшев А. Б. Работа с базами данных на языке C#. Изд-во УГТУ, 2009. – 170 с.
2.	Документация Microsoft по ADO.NET. Интернет-ресурс URL: https://docs.microsoft.com/ru-ru/dotnet/framework/data/adonet/
